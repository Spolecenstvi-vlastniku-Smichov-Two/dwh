# https://github.com/AnimMouse/setup-rclone
name: scheduled

on:
  push:
    branches:
      - develop

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@v1
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}
        
      - name: Add Rclone service account file
        uses: AnimMouse/setup-rclone/service-account-file@v1
        with:
          service_account_filename: service-account-file.json
          service_account_file: ${{ secrets.SERVICE_ACCOUNT_FILE }}
        
      - run: rclone copy sm2drive:Vzduchotechnika/Latest/ ./latest/

      - run: ls -l ./latest/

      - name: Iterate over files and extract SM house number and date
        run: |
          for file in ./latest/*; do
            echo "Processing $file"
            sm_house_number=$(head -n 1 "$file" | grep "Date" | grep -Eo 'vzt[0-9]{2}_temp-tea-sani' | grep -Eo '[0-9]{2}')
            echo "SM House Number: $sm_house_number"
            date=$(tail "$file" | grep "00:00" | tail -n 1 | grep -Eo '[0-9]{2}.[0-9]{2}.[0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}' | sed -E 's/([0-9]{2}).([0-9]{2}).([0-9]{4})/\3-\2-\1/')
            echo "Date: $date"
            if [[ ${#sm_house_number} -eq 2 ]]; then
              mv -f "$file" "./latest/sm${sm_house_number}_${date//[\ \:\-\;><\@\$\#\&\(\)\?\\\/\%]/_}.csv" ||:
            else
              echo "Skipping renaming $file as SM house number does not have exactly two chars."
            fi
          done
      
      - run: ls -l ./latest/

      - name: Copy latest files to final
        run: |
          sorted_files=$(ls ./latest | sort)
          for Item in 'sm01' 'sm02' 'sm03' 'sm04' 'sm05' 'sm06' 'sm07' 'sm08' 'sm09' ;
            do
              rclone copyto ./latest/$(echo "$sorted_files" | grep "$Item" | tail -n 1) ./final/"$Item".csv
            done
            
      - name: Iterate over files and correct the file headers
        run: |
          for file in ./final/*; 
            do
              fileheader=$(head -n 1 "$file")
              IFS=';' read -ra my_array <<< "$fileheader"
              newfileheader=''
              separator=';'
              for i in "${my_array[@]}"
                do
                  for Item in 'Date' 'venkov' 'sani' 'odvod' 'privod' 'vyfuk' ;
                    do
                      if [[ $i == *"$Item"* ]]; then
                        $newfileheader="$newfileheader$i$separator"
                      fi
                    done
                done
              echo ${newfileheader:0:-1}
            done

      - run: ls -l ./final/
